{"version":3,"sources":["logo.svg","components/layout/Header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/layout/Footer.js","components/store/containers/Footer.js","components/store/actions/changeThemeAction.js","components/TodoApp.js","App.js","reportWebVitals.js","components/store/reducers/themeReducer.js","components/store/reducers/index.js","index.js"],"names":["Header","className","Component","TodoItem","state","this","props","todo","completed","id","title","type","checked","onChange","handleChange","onClick","deleteTodo","Todos","todos","map","AddTodo","useState","setTitle","onSubmit","e","preventDefault","addTodo","placeholder","value","target","Footer","submitThemeColor","bind","color","console","log","saveColorTheme","nextProps","JSON","stringify","document","documentElement","style","setProperty","themeColor","connect","dispatch","payload","saveTheme","TodoApp","setTodos","useEffect","axios","get","params","_limit","then","res","data","newTodo","post","response","delete","filter","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","combineReducers","action","Object","assign","store","createStore","rootReducer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7c5549a4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header className=\"header-container\">\r\n        <h1 className=\"header-title\">Simple Todo App</h1>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\n\r\nclass TodoItem extends Component {\r\n  state = {};\r\n  render() {\r\n    const { completed, id, title } = this.props.todo;\r\n    return (\r\n      <li className=\"todo-item\">\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={completed}\r\n          onChange={() => this.props.handleChange(id)}\r\n\r\n        />\r\n\r\n        <span className={completed ? \"completed\" : \"null\"}>{title}</span>\r\n        <button className=\"btn-style\" onClick={() => this.props.deleteTodo(id)}> X </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nclass Todos extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul>\r\n          {this.props.todos.map((todo) => (\r\n            <TodoItem\r\n              key={todo.id}\r\n              todo={todo}\r\n              handleChange={this.props.handleChange}\r\n              deleteTodo={this.props.deleteTodo}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Todos;\r\n","import React, { Component, useState } from \"react\";\r\n\r\n// class AddTodo extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       title: \"\",\r\n//     };\r\n//   }\r\n//   onInputChange = e => {\r\n//       this.setState({\r\n//           title: e.target.value\r\n//       })\r\n//   }\r\n//   addTodo = e => {\r\n//       e.preventDefault();\r\n//       this.props.addTodo(this.state.title);\r\n//       this.setState({\r\n//           title: \"\"\r\n//       })\r\n//   }\r\n//   render() {\r\n//     return (\r\n//       <form className=\"form-container\" onSubmit={this.addTodo}>\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Add Todo\"\r\n//           className=\"input-text\"\r\n//           value={this.state.title}\r\n//           onChange={this.onInputChange}\r\n//         />\r\n//         <input type=\"submit\" value=\"Submit\" className=\"input-submit\" />\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\nfunction AddTodo (props){\r\n  const [title, setTitle] = useState(\"\");\r\n  \r\n  const onInputChange = (e) => {\r\n    setTitle(e.target.value);\r\n  }\r\n\r\n  const addTodo = (e) =>{\r\n    e.preventDefault();\r\n    props.addTodo(title);\r\n    setTitle(\"\")\r\n  }\r\n  return(\r\n    <form className=\"form-container\" onSubmit={addTodo}>\r\n         <input\r\n          type=\"text\"\r\n          placeholder=\"Add Todo\"\r\n          className=\"input-text\"\r\n          value={title}\r\n          onChange={onInputChange}\r\n        />\r\n        <input type=\"submit\" value=\"Submit\" className=\"input-submit\" />\r\n      </form>\r\n  )\r\n}\r\nexport default AddTodo;\r\n","import React, {Component} from \"react\";\r\n\r\nconst RED = \"#ff0000\";\r\nconst BLUE = \"#0000ff\";\r\nconst GRAY = \"#678c89\";\r\n\r\nclass Footer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n        this.submitThemeColor = this.submitThemeColor.bind(this);\r\n    }\r\n\r\n    submitThemeColor(color){\r\n        if(color){\r\n            console.log('handleChangeTheme');\r\n            this.props.saveColorTheme(color);\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        console.log('UNSAFE_componentWillReceiveProps: ' +JSON.stringify(nextProps));\r\n        document\r\n            .documentElement\r\n            .style\r\n            .setProperty(\"--main-color\", nextProps.themeColor.color);\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"footer\">\r\n                <div className=\"vertical-center\">\r\n                    <span>Choose Theme </span>\r\n                    <button className=\"dot red\" onClick={() => this.submitThemeColor(RED)}></button>\r\n                    <button className=\"dot blue\" onClick={() => this.submitThemeColor(BLUE)}></button>\r\n                    <button className=\"dot gray\" onClick={() => this.submitThemeColor(GRAY)}></button>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Footer;","import { connect } from 'react-redux';\r\nimport { saveTheme } from '../actions/changeThemeAction';\r\nimport Footer from './../../layout/Footer';\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        saveColorTheme: (color) => {\r\n            dispatch(saveTheme(color))\r\n        }\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//     dispatch,\r\n//     saveColorTheme: color => dispatch(saveTheme(color))\r\n//   });\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        themeColor: state.color\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps \r\n    \r\n)(Footer);","export const saveTheme = color => ({\r\n    type: 'CHANGE_THEME',\r\n    payload: {\r\n        color\r\n    }\r\n})","import React, { Component, useState, useEffect } from \"react\";\r\nimport Header from \"./layout/Header\";\r\nimport Todos from \"./Todos\";\r\nimport AddTodo from \"./AddTodo\"\r\nimport {v4 as uuidv4} from 'uuid'\r\nimport axios from \"axios\";\r\nimport Footer from \"./store/containers/Footer\";\r\n// class TodoApp extends Component {\r\n//   state = {\r\n//     todos: [],\r\n//   };\r\n\r\n//   handleCheckboxChange = (id) => {\r\n//     this.setState({\r\n//       todos: this.state.todos.map((todo) => {\r\n//         if (todo.id === id) {\r\n//           todo.completed = !todo.completed;\r\n//         }\r\n//         return todo;\r\n//       }),\r\n//     });\r\n//   };\r\n//   deleteTodo = (id) => {\r\n//     axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n//       .then(response => this.setState({\r\n//         todos:[\r\n//           ...this.state.todos.filter(todo => {\r\n//             return todo.id !== id;\r\n//           })\r\n//         ]\r\n//       }))\r\n//     this.setState({\r\n//         todos:[\r\n//             ...this.state.todos.filter(todo => {\r\n//                 return todo.id !== id;\r\n//             })\r\n//         ]\r\n//     })\r\n//   };\r\n//   addTodo = title => {\r\n//       const newTodo = {\r\n//           title: title,\r\n//           completed: false\r\n//       }\r\n//       axios.post(\"https://jsonplaceholder.typicode.com/todos\", newTodo)\r\n//         .then(response => {\r\n//           console.log(response);\r\n//           this.setState({\r\n//             todos: [...this.state.todos, response.data]\r\n//           })\r\n//         })\r\n//   }\r\n//   componentDidMount(){\r\n//       const config = {\r\n//           params: {\r\n//               _limit: 10\r\n//           }\r\n//       }\r\n//       axios.get(\"https://jsonplaceholder.typicode.com/todos\", config).then(res => this.setState({todos: res.data}))\r\n//   }\r\n//   render() {\r\n//     return (\r\n//       <div className=\"container\">\r\n//         <Header />\r\n//         <AddTodo addTodo={this.addTodo}/>\r\n//         <Todos\r\n//           todos={this.state.todos}\r\n//           handleChange={this.handleCheckboxChange}\r\n//           deleteTodo={this.deleteTodo}\r\n//         />\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\nfunction TodoApp(){\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const config = {\r\n      params: {\r\n          _limit: 10\r\n      }\r\n    }\r\n    axios.get(\"https://jsonplaceholder.typicode.com/todos\", config).then(res => setTodos(res.data));\r\n  }, []);\r\n  const handleCheckboxChange = (id) => {\r\n    setTodos(todos.map(todo => {\r\n      if(todo.id === id){\r\n        todo.completed = !todo.completed;\r\n      }\r\n      return todo\r\n    }))\r\n  }\r\n  \r\n  const deleteTodo = (id) => {\r\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n      .then(response => setTodos(\r\n        todos.filter(todo => {\r\n          return todo.id !== id\r\n        })\r\n      ))\r\n  }\r\n\r\n  const addTodo = (title) => {\r\n      const newTodo = {\r\n          title: title,\r\n          completed: false\r\n      }\r\n      axios.post(\"https://jsonplaceholder.typicode.com/todos\", newTodo)\r\n        .then(response => {\r\n          // setTodos(todos.push(response.data))\r\n          setTodos([...todos, response.data])\r\n        })\r\n  }\r\n  return(\r\n      <div className=\"container\">\r\n        <Header />\r\n        <AddTodo addTodo={addTodo}/>\r\n        <Todos\r\n          todos={todos}\r\n          handleChange={handleCheckboxChange}\r\n          deleteTodo={deleteTodo}\r\n        />\r\n        <Footer/>\r\n      </div>\r\n  )\r\n}\r\nexport default TodoApp;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport TodoApp from './components/TodoApp';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoApp />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let initState = {\r\n    color: \"FFFFFF\"\r\n};\r\n\r\nexport default function themeReducer(state = initState, action){\r\n    switch(action.type){\r\n        case 'CHANGE_THEME':\r\n            console.log('themeReducer: ' + JSON.stringify(state));\r\n            return Object.assign({}, state, {\r\n                color: action.payload.color\r\n            })\r\n        default:\r\n            return initState;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport color from './themeReducer';\r\n\r\nexport default combineReducers({\r\n    color\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './components/store/reducers';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}